# Generated by Django 4.0.4 on 2022-04-27 14:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Объект',
                'verbose_name_plural': 'Объекты',
            },
        ),
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=511, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип объекта',
                'verbose_name_plural': 'Типы объектов',
            },
        ),
        migrations.CreateModel(
            name='AttackerSpecification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('INSIDER', 'Внутренний'), ('OUTSIDER', 'Внешний')], default='INSIDER', max_length=8, verbose_name='Тип')),
                ('potential', models.CharField(choices=[('HIGH', 'Высокий'), ('MEDIUM', 'Средний'), ('LOW', 'Низкий')], default='LOW', max_length=8, verbose_name='Потенциал')),
            ],
            options={
                'verbose_name': 'Спецификация нарушителя',
                'verbose_name_plural': 'Спецификации нарушителей',
            },
        ),
        migrations.CreateModel(
            name='Capability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('level', models.CharField(choices=[('N4', 'Н4'), ('N3', 'Н3'), ('N2', 'Н2'), ('N1', 'Н1')], max_length=2, null=True, verbose_name='Уровень')),
                ('description', models.TextField(max_length=2048, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Возможность нарушителя',
                'verbose_name_plural': 'Возможности нарушителей',
            },
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('asset_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.assettype', verbose_name='Тип объекта')),
            ],
            options={
                'verbose_name': 'Интерфейс',
                'verbose_name_plural': 'Интерфейсы',
            },
        ),
        migrations.CreateModel(
            name='NegativeConsequenceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('number', models.SmallIntegerField(verbose_name='Номер группы')),
            ],
            options={
                'verbose_name': 'Группа негативных последствий',
                'verbose_name_plural': 'Группы негативных последствий',
            },
        ),
        migrations.CreateModel(
            name='Tactic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тактика',
                'verbose_name_plural': 'Тактики',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Вендор',
                'verbose_name_plural': 'Вендоры',
            },
        ),
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1023, verbose_name='Название')),
                ('type', models.CharField(choices=[('INSIDER', 'Внутренний'), ('OUTSIDER', 'Внешний')], default='INSIDER', max_length=8, verbose_name='Тип')),
                ('bdu_id', models.CharField(max_length=14, null=True, verbose_name='Идентификатор БДУ')),
                ('description', models.TextField(max_length=511, null=True, verbose_name='Описание')),
                ('discovery_date', models.DateField(null=True, verbose_name='Дата выявления')),
                ('cvss_v2', models.CharField(max_length=63, null=True, verbose_name='CVSS 2.0')),
                ('cvss_v3', models.CharField(max_length=63, null=True, verbose_name='CVSS 3.0')),
                ('cvss_v2_score', models.FloatField(null=True, verbose_name='CVSS 2.0 Оценка')),
                ('cvss_v3_score', models.FloatField(null=True, verbose_name='CVSS 3.0 Оценка')),
                ('severity', models.CharField(max_length=255, null=True, verbose_name='Критичность')),
                ('bdu_countermeasure_advice', models.TextField(max_length=511, null=True, verbose_name='Возможный способ устранения')),
                ('source_link', models.TextField(max_length=3000, null=True, verbose_name='Ссылка на источник')),
                ('asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.asset', verbose_name='Объект')),
                ('interface', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.interface', verbose_name='Интерфейс')),
            ],
            options={
                'verbose_name': 'Уязвимость',
                'verbose_name_plural': 'Уязвимости',
            },
        ),
        migrations.CreateModel(
            name='ThreatsImplementationMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(max_length=511, null=True, verbose_name='Описание')),
                ('asset_interface', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.interface', verbose_name='Используемый интерфейс')),
                ('attacker_capability', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.capability', verbose_name='Возможность нарушителя')),
            ],
            options={
                'verbose_name': 'Cпособ реализации',
                'verbose_name_plural': 'Способы реализации',
            },
        ),
        migrations.CreateModel(
            name='Threat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1023, verbose_name='Название')),
                ('bdu_id', models.IntegerField(null=True, verbose_name='Идентификатор УБИ>')),
                ('description', models.TextField(max_length=1023, null=True, verbose_name='Описание')),
                ('confidentiality', models.BooleanField(default=False, verbose_name='Нарушает конфиденциальность')),
                ('integrity', models.BooleanField(default=False, verbose_name='Нарушает целостность')),
                ('availability', models.BooleanField(default=False, verbose_name='Нарушает доступность')),
                ('asset_types', models.ManyToManyField(to='app.assettype', verbose_name='Типы объектов')),
                ('attackers', models.ManyToManyField(to='app.attackerspecification', verbose_name='Спецификация нарушителя')),
            ],
            options={
                'verbose_name': 'Угроза',
                'verbose_name_plural': 'Угрозы',
            },
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('tactic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.tactic', verbose_name='Тактика')),
            ],
            options={
                'verbose_name': 'Техника',
                'verbose_name_plural': 'Техники',
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('threat_implementation_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.threatsimplementationmethod', verbose_name='Cпособ реализации')),
            ],
            options={
                'verbose_name': 'Сценарий',
                'verbose_name_plural': 'Сценарии',
            },
        ),
        migrations.CreateModel(
            name='NegativeConsequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('number', models.SmallIntegerField(verbose_name='Номер')),
                ('description', models.TextField(max_length=511, null=True, verbose_name='Описание')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.negativeconsequencegroup', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Негативное последствие',
                'verbose_name_plural': 'Негативные последствия',
            },
        ),
        migrations.CreateModel(
            name='KIIClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification', models.CharField(choices=[('FINANCIAL', 'Финансовая'), ('HAS_PRIVATE_WEB_RESOURCES', 'Имеет частные WEB-ресурсы'), ('HAS_PUBLIC_WEB_RESOURCES', 'Имеет публичные WEB-ресурсы'), ('DEFENCE_SYSTEM', 'СИСТЕМА ОБОРОНЫ'), ('SPECIAL_OR_BIOMETRIC_OFFICIALS_PERSONAL_DATA', 'Обрабатывает специальные или биометрические данные госслужащих'), ('IMPACT_ON_PUBLIC_PERCEPTION', 'Влияние на общественное сознание')], max_length=44, verbose_name='Спецификация')),
                ('negative_consequences', models.ManyToManyField(to='app.negativeconsequence', verbose_name='Негативные последствия')),
            ],
            options={
                'verbose_name': 'КИИ',
                'verbose_name_plural': 'КИИ',
            },
        ),
        migrations.CreateModel(
            name='ISPDNClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('SPECIAL', 'Cпециальные'), ('BIOMETRIC', 'Биометрические'), ('PUBLIC', 'Общедоступные'), ('OTHER', 'Иные')], default='PUBLIC', max_length=9, verbose_name='Тип')),
                ('specification', models.CharField(choices=[('FINANCIAL', 'Финансовая'), ('HAS_PRIVATE_WEB_RESOURCES', 'Имеет частные WEB-ресурсы'), ('HAS_PUBLIC_WEB_RESOURCES', 'Имеет публичные WEB-ресурсы'), ('DEFENCE_SYSTEM', 'СИСТЕМА ОБОРОНЫ'), ('SPECIAL_OR_BIOMETRIC_OFFICIALS_PERSONAL_DATA', 'Обрабатывает специальные или биометрические данные госслужащих'), ('IMPACT_ON_PUBLIC_PERCEPTION', 'Влияние на общественное сознание'), ('GOVERNMENT', 'Государственная')], max_length=44, verbose_name='Спецификация')),
                ('negative_consequences', models.ManyToManyField(to='app.negativeconsequence', verbose_name='Негативные последствия')),
            ],
            options={
                'verbose_name': 'ИСПДН',
                'verbose_name_plural': 'ИСПДН',
            },
        ),
        migrations.CreateModel(
            name='GISClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('REGIONAL', 'Региональный'), ('FEDERAL', 'Федеральный'), ('OBJECTED', 'Объектовый')], default='REGIONAL', max_length=9, verbose_name='Масштаб')),
                ('protection_class', models.CharField(choices=[('K1', 'K1'), ('K2', 'K2'), ('K3', 'K3')], default='K1', max_length=2, verbose_name='Класс защищенности')),
                ('specification', models.CharField(choices=[('FINANCIAL', 'Финансовая'), ('HAS_PRIVATE_WEB_RESOURCES', 'Имеет частные WEB-ресурсы'), ('HAS_PUBLIC_WEB_RESOURCES', 'Имеет публичные WEB-ресурсы'), ('DEFENCE_SYSTEM', 'СИСТЕМА ОБОРОНЫ'), ('SPECIAL_OR_BIOMETRIC_OFFICIALS_PERSONAL_DATA', 'Обрабатывает специальные или биометрические данные госслужащих'), ('IMPACT_ON_PUBLIC_PERCEPTION', 'Влияние на общественное сознание')], max_length=44, verbose_name='Спецификация')),
                ('negative_consequences', models.ManyToManyField(to='app.negativeconsequence', verbose_name='Негативные последствия')),
            ],
            options={
                'verbose_name': 'ГИС',
                'verbose_name_plural': 'ГИС',
            },
        ),
        migrations.CreateModel(
            name='AttackerScope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('negative_consequences', models.ManyToManyField(to='app.negativeconsequence', verbose_name='Негативные последствия')),
            ],
            options={
                'verbose_name': 'Цель нарушителя',
                'verbose_name_plural': 'Цели нарушителей',
            },
        ),
        migrations.CreateModel(
            name='Attacker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('attacker_specification', models.ManyToManyField(to='app.attackerspecification', verbose_name='Спецификации нарушителей')),
                ('capability', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.capability', verbose_name='Возможности')),
                ('scopes', models.ManyToManyField(to='app.attackerscope', verbose_name='Цели')),
            ],
            options={
                'verbose_name': 'Нарушитель',
                'verbose_name_plural': 'Нарушители',
            },
        ),
        migrations.CreateModel(
            name='ASUTPClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protection_class', models.CharField(choices=[('K1', 'K1'), ('K2', 'K2'), ('K3', 'K3')], default='K1', max_length=2, verbose_name='Класс защищенности')),
                ('specification', models.CharField(choices=[('FINANCIAL', 'Финансовая'), ('HAS_PRIVATE_WEB_RESOURCES', 'Имеет частные WEB-ресурсы'), ('HAS_PUBLIC_WEB_RESOURCES', 'Имеет публичные WEB-ресурсы'), ('DEFENCE_SYSTEM', 'Система обороны'), ('SPECIAL_OR_BIOMETRIC_OFFICIALS_PERSONAL_DATA', 'Обрабатывает специальные или биометрические данные госслужащих'), ('IMPACT_ON_PUBLIC_PERCEPTION', 'Влияние на общественное сознание'), ('MANUFACTURE', 'Производство')], max_length=44, verbose_name='Спецификация')),
                ('negative_consequences', models.ManyToManyField(to='app.negativeconsequence', verbose_name='Негативные последствия')),
            ],
            options={
                'verbose_name': 'АСУТП',
                'verbose_name_plural': 'АСУТП',
            },
        ),
        migrations.AddField(
            model_name='asset',
            name='asset_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.assettype', verbose_name='Тип объекта'),
        ),
        migrations.AddField(
            model_name='asset',
            name='vendor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.vendor', verbose_name='Вендор'),
        ),
        migrations.CreateModel(
            name='ScenarioStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('step_number', models.IntegerField(verbose_name='Номер шага')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.scenario', verbose_name='Сценарий')),
                ('technique', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.technique', verbose_name='Техника')),
            ],
            options={
                'verbose_name': 'Шаг сценария',
                'verbose_name_plural': 'Шаги сценария',
                'unique_together': {('scenario', 'step_number')},
            },
        ),
    ]
